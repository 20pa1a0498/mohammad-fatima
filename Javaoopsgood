//Bank account
import java.io.*;
import java.util.*;
class Bank{
    private String name;
    private int acc;
    private int bal;
    private static int accountTrace;
    public Bank (String s1){
        name=s1;
        acc=accountTrace++;
    }
    public static void setAccountTrace(int value){
        accountTrace=value;
    }
    public int getAcc(){
        return acc;
    }
    public String getName(){
        return name;
    }
    public int getBal(){
        return bal;
    }
    public void deposit(int n){
        bal+=n;
    }
    public void withdraw(int m){
        if(bal<m){
            System.out.println("Negative Balance Transaction Cancelled");
        }
        else{
            bal-=m;
        }
    }
    public void display(){
        System.out.println(acc+" "+name+" "+bal);
    }
}
public class Solution {

    public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        int d=in.nextInt();
        Bank.setAccountTrace(d);
        in.nextLine();
        String s=in.nextLine();
        int t=Integer.parseInt(in.nextLine());
        Bank b=new Bank(s);
        for(int i=0;i<t;i++){
            String [] h=in.nextLine().split(" ");
            if(h[0].equals("Deposit")){
                b.deposit(Integer.parseInt(h[1]));
            }
            else if(h[0].equals("Withdraw")){
                b.withdraw(Integer.parseInt(h[1]));
            }
            else{
                b.display();
            }
        }
    }
}

//Class and objects9
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
class Person{
    static int age;
    Person(int age){
        this.age=age;
    }
    public void amIOld(){
        if(age<0){
            age=0;
            System.out.println("Age is not valid, setting age to 0.");
            System.out.println("You are young.");
        }
        else if(age>0 && age<13){
            System.out.println("You are young.");
        }
         else if(age>=13 && age<18){
             System.out.println("You are a teenager.");
         }
        else{
            System.out.println("You are old.");
        }   
    }
    public void yearPasses(){
        age++;
    }
}

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        for (int i = 0; i < T; i++) {
            int age = sc.nextInt();
            Person p = new Person(age);
            p.amIOld();
            for (int j = 0; j < 4; j++) {
                p.yearPasses();
            }
            p.amIOld();
            System.out.println();
        }
        sc.close();
    }
}

//custom sort object 
import java.io.*;
import java.util.*;
class Candidate implements Comparable<Candidate>
{
    private String name;
    private int marks;
    public Candidate(String name ,int marks)
    {
    this.name=name;
    this.marks=marks;
    }
    public String getName()
    {
    return name;
    }
    public int getMark()
    {
    return marks;
    }
    public int compareTo(Candidate two)
    {
        if(marks!=two.getMark())
        {
        return marks-(two.getMark());
        }
        return name.compareTo(two.getName());
    }
}

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        List<Candidate>  students = new ArrayList<Candidate>();
        for(int i=0;i<n;i++){
           in.nextLine();
           String name = in.next();
           int marks = in.nextInt();
           students.add(new Candidate(name,marks));
        }
        Collections.sort(students);
        for(Candidate student : students){
            System.out.println(student.getName()+" "+student.getMark());
        }
    }
}

//dog inheritance
import java.io.*;
import java.util.*;

class Dog
{
    private String name;
    public String getName()
    {
        return name;
    }
    public String setName(String name)
    {
        return this.name=name;
    }
}
class Greyhound extends Dog
{
    private String color;
    private int weight;
    public Greyhound(String name ,String color,int weight)
    {
     super.setName(name);
     this.color=color;
     this.weight=weight;
    }
    public String getColor()
    {
    return color;
    }
    public int getWeight()
    {
    return weight;
    }
}

//student normal
class Student {
    private String name;
    private int rollNo;
    private String branch;
    private int year;
    private List<Integer> marks;
    private static int noOfStudents;
    
    public Student(String n, int rollNo, String branch, int year){
        this.name = n;
        this.rollNo = rollNo;
        this.branch = branch;
        this.year = year;
        marks = new ArrayList<>();
        noOfStudents++;
    }
    
    public String getName(){
        return name; 
    }
    public int getRollNo(){
        return rollNo; 
    }
    public String getBranch(){
        return branch; 
    }
    public int getYear(){
        return year; 
    }
    public List<Integer> getMarks(){
        return marks; 
    }
    public void setName(String name){
        this.name = name;
    }
    public void setMarks(int obtainedMark){
        marks.add(obtainedMark);
    }
    public void display(){
        System.out.println(rollNo+" "+name+" "+branch+" "+year);
    }
    public double computePercentage(){
        double sum = 0;
        for(Integer mark:marks){
            sum = sum + mark;
        }
        if(marks.size()==0)
            return 0;
        return sum/marks.size();
    }
    public static void displayNoStuds(){
        System.out.println("NoOfStudents="+noOfStudents);
    }
    
}
